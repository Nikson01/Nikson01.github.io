{"version":3,"file":"static/js/929.535ff082.chunk.js","mappings":"yLAUA,MARA,SAAgBA,GACd,OACE,mBAAQC,UAAU,WAAWC,QAAS,kBAAMF,EAAMG,cAAlD,SACGH,EAAMI,Q,kICyDb,MApDA,WACE,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAEjB,GAAwCC,EAAAA,EAAAA,WAAS,GAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAoCF,EAAAA,EAAAA,UAAS,SAA7C,eAAOG,EAAP,KAAmBC,EAAnB,KACMC,GAAUC,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMF,WACvCG,GAAQF,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMC,SACrCC,GAAQH,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAME,SAErCjB,GAAakB,EAAAA,EAAAA,cAAY,WAC7BZ,EAASa,EAAAA,IAETC,YAAW,WACTd,EAASa,EAAAA,GACTf,EAAS,WACR,OACF,CAACE,EAAUF,IASd,OAPAiB,EAAAA,EAAAA,YAAU,WACkB,YAAtBnB,EAASoB,WACXZ,GAAgB,GAChBE,EAAc,gBAEf,CAACV,KAGF,SAACqB,EAAA,EAAD,CAAgBC,OAAQX,EAASY,SAAO,EAACxB,KAAK,4BAA9C,UACE,iBAAKH,UAAU,UAAf,WACIW,IACA,gBAAKX,UAAU,mBAAmB4B,IAAI,KAAKC,IAAKC,KAElD,iBAAK9B,UAAU,iBAAf,WACE,gBAAKA,UAAU,aAAa4B,IAAI,OAAOC,IAAKE,KAC5C,iBAAK/B,UAAU,oBAAf,UACIW,GAGA,4BACE,iBAAMX,UAAU,0BAAhB,2BACA,0BAAKkB,EAAQ,EAAIC,EAAMD,EAAQ,GAA1B,KAAL,iBAJF,4DAOF,SAAC,EAAD,CAAQf,KAAMU,EAAYX,WAAYA","sources":["helpers/Button.js","commons/components/Home.js"],"sourcesContent":["import React from \"react\";\r\n\r\nfunction Button(props) {\r\n  return (\r\n    <button className=\"main-btn\" onClick={() => props.launchGame()}>\r\n      {props.text}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default Button;\r\n","import React, { useEffect, useState, useCallback } from \"react\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport Button from \"../../helpers/Button\";\r\nimport BackgroundImg from \"../../images/bg.png\";\r\nimport MainImg from \"../../images/hand.png\";\r\n\r\nimport LoadingOverlay from \"react-loading-overlay\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport * as actions from \"../../store/actions\";\r\n\r\nfunction Home() {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  const [isFinishPage, setIsFinishPage] = useState(false);\r\n  const [buttonText, setButtonText] = useState(\"Start\");\r\n  const loading = useSelector((state) => state.loading);\r\n  const index = useSelector((state) => state.index);\r\n  const level = useSelector((state) => state.level);\r\n\r\n  const launchGame = useCallback(() => {\r\n    dispatch(actions.setLoader);\r\n\r\n    setTimeout(() => {\r\n      dispatch(actions.startGame);\r\n      navigate(\"/quiz\");\r\n    }, 2000);\r\n  }, [dispatch, navigate]);\r\n\r\n  useEffect(() => {\r\n    if (location.pathname === \"/finish\") {\r\n      setIsFinishPage(true);\r\n      setButtonText(\"Try again\");\r\n    }\r\n  }, [location]);\r\n\r\n  return (\r\n    <LoadingOverlay active={loading} spinner text=\"Preparing for the game...\">\r\n      <div className=\"wrapper\">\r\n        {!isFinishPage && (\r\n          <img className=\"background-image\" alt=\"bg\" src={BackgroundImg}></img>\r\n        )}\r\n        <div className=\"flex_container\">\r\n          <img className=\"main-image\" alt=\"hand\" src={MainImg}></img>\r\n          <div className=\"main-right__block\">\r\n            {!isFinishPage ? (\r\n              <h1>Who wants to be a millionare ?</h1>\r\n            ) : (\r\n              <div>\r\n                <span className=\"main-right__block-total\">Total score:</span>\r\n                <h1>{index > 0 ? level[index - 1] : `0$`} earned</h1>\r\n              </div>\r\n            )}\r\n            <Button text={buttonText} launchGame={launchGame} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </LoadingOverlay>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n"],"names":["props","className","onClick","launchGame","text","location","useLocation","navigate","useNavigate","dispatch","useDispatch","useState","isFinishPage","setIsFinishPage","buttonText","setButtonText","loading","useSelector","state","index","level","useCallback","actions","setTimeout","useEffect","pathname","LoadingOverlay","active","spinner","alt","src","BackgroundImg","MainImg"],"sourceRoot":""}